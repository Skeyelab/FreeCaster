name: Build FreeCaster

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macOS
    env:
      CODE_SIGN_IDENTITY: ${{ secrets.CODE_SIGN_IDENTITY }}
      DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: |
            build
            ~/Library/Caches/ccache
          key: macos-cmake-${{ runner.arch }}-${{ hashFiles('CMakeLists.txt', 'Source/**') }}
          restore-keys: |
            macos-cmake-${{ runner.arch }}-
            macos-cmake-

      - name: Build macOS Plugin
        run: |
          echo "🔨 Building FreeCaster for macOS..."
          chmod +x build.sh
          ./build.sh Release

      - name: Build Unit Tests
        run: |
          echo "🧪 Building unit tests..."
          cd build
          cmake --build . --target FreeCasterTests --config Release

      - name: Run Unit Tests
        run: |
          echo "✅ Running unit tests..."
          cd build
          ./FreeCasterTests

          if [ $? -eq 0 ]; then
            echo "✅ All tests passed!"
          else
            echo "❌ Tests failed!"
            exit 1
          fi

      - name: Code Sign macOS Plugin
        run: |
          echo "🔐 Checking code signing configuration..."

          sign_bundle() {
              local bundle_path="$1"
              local bundle_name=$(basename "$bundle_path")

              if [ -z "$CODE_SIGN_IDENTITY" ]; then
                  echo "  ⚠️  Skipping code signing for $bundle_name"
                  return 0
              fi

              echo "  🔏 Code signing $bundle_name..."
              codesign --force --options runtime --entitlements entitlements.plist \
                  --sign "$CODE_SIGN_IDENTITY" --timestamp "$bundle_path"

              if [ $? -eq 0 ]; then
                  echo "  ✅ Successfully signed $bundle_name"
                  codesign --verify --deep --strict "$bundle_path"
              fi
          }

          if [ -z "$CODE_SIGN_IDENTITY" ]; then
              AVAILABLE_IDENTITIES=$(security find-identity -v -p codesigning | grep "Developer ID Application" | head -1)
              if [ ! -z "$AVAILABLE_IDENTITIES" ]; then
                  CODE_SIGN_IDENTITY=$(echo "$AVAILABLE_IDENTITIES" | sed -n 's/.*"\(.*\)"/\1/p')
                  echo "  🔍 Auto-detected signing identity: $CODE_SIGN_IDENTITY"
              fi
          fi

          if [ -d "build/FreeCaster_artefacts/Release/AU/FreeCaster.component" ]; then
              sign_bundle "build/FreeCaster_artefacts/Release/AU/FreeCaster.component"
          fi

          if [ -d "build/FreeCaster_artefacts/Release/VST3/FreeCaster.vst3" ]; then
              sign_bundle "build/FreeCaster_artefacts/Release/VST3/FreeCaster.vst3"
          fi

          if [ -d "build/FreeCaster_artefacts/Release/Standalone/FreeCaster.app" ]; then
              sign_bundle "build/FreeCaster_artefacts/Release/Standalone/FreeCaster.app"
          fi

      - name: Create distribution
        run: |
          echo "📦 Creating distribution..."
          mkdir -p dist
          if [ -d "build/FreeCaster_artefacts/Release/AU/FreeCaster.component" ]; then
            cp -R build/FreeCaster_artefacts/Release/AU/FreeCaster.component dist/
          fi
          if [ -d "build/FreeCaster_artefacts/Release/VST3/FreeCaster.vst3" ]; then
            cp -R build/FreeCaster_artefacts/Release/VST3/FreeCaster.vst3 dist/
          fi
          if [ -d "build/FreeCaster_artefacts/Release/Standalone/FreeCaster.app" ]; then
            cp -R build/FreeCaster_artefacts/Release/Standalone/FreeCaster.app dist/
          fi

      - name: Verify distribution
        run: |
          echo "✅ Build artifacts:"
          ls -lh dist/
          du -sh dist/*

      - name: Cleanup build artifacts
        if: always()
        run: |
          find . -name "*.tmp" -o -name ".DS_Store" -type f -delete 2>/dev/null || true
          find . -name "*.build" -type d -exec rm -rf {} + 2>/dev/null || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: dist/
